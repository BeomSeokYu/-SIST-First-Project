package exam.main;

import java.text.SimpleDateFormat;
import java.util.List;
import java.util.Scanner;

import exam.dao.LoginCheck;
import exam.dao.MemberDAO;
import exam.util.ClearScreen;
import exam.util.DBCon;
import exam.vo.MemberVO;

public class MemberMain {
	public static String ADMIN_ID = "admin";
	private Scanner sc = new Scanner(System.in);
	private MemberDAO dao = new MemberDAO();
	private LoginCheck lc = new LoginCheck();
	private String id;
	private String pw;
	
	/**
	 * 생성자
	 */
	public MemberMain() {
	}

	public MemberMain(Scanner sc, String id) {
		this.sc = sc;
		this.id = id;
	}
	
	public static void main(String[] args) {
		DBCon.getConnection();
		new MemberMain().menu();
	}

	public void menu() {
		//boolean loginFlag = false;
		while (true) {
			System.out.println("----------- Member only SYSTEM MAIN -----------");
			System.out.println("  1. 가입\t\t 2. 로그인\t 3. 시스템 종료");
			System.out.println("-----------------------------------------------");
			System.out.print(">> 선택 : ");
			int select = sc.nextInt();
			sc.nextLine();
			switch (select) {
				case 1: join();
						break;
				case 2: login();
						//new LoginWindow(this);
						//loginFlag = true;
						break;
				case 3: System.out.println(">> 시스템을 종료합니다.");
						sc.close();
						System.exit(0);
						break;
				default:System.out.println(">> 1 ~ 3 중에 하나만 입력해 주세요.");
						break;
			}
			//if(loginFlag) break;
		}
	}

	public void join() {
		MemberVO member = new MemberVO();
		new ClearScreen();
		System.out.println("----------- Member only SYSTEM 회원 가입 -----------");
		System.out.print(">> 아이디 : ");
		member.setId(sc.nextLine());
		System.out.print(">> 비밀번호 : ");
		member.setPw(sc.nextLine());
		System.out.print(">> 이름 : ");
		member.setName(sc.nextLine());
		System.out.print(">> 이메일 : ");
		member.setEmail(sc.nextLine());
		System.out.print(">> 사진 : ");
		member.setPhoto(sc.nextLine());
		System.out.print(">> 성별(F/M) : ");
		member.setGender(sc.nextLine());
		System.out.println("-----------------------------------------------");
		if (dao.insertMember(member))
			//lc.putMember(member.getId(), member.getPw());
		System.out.println(">> 회원 가입이 완료되었습니다.\n 로그인 후 이용해 주세요.\n");
	}

	public void login() {
		System.out.println("----------- Member only SYSTEM 로그인 -----------");
		System.out.print(">> 아이디 : ");
		id = sc.nextLine();
		System.out.print(">> 비밀번호 : ");
		pw = sc.nextLine();
		if (lc.checkLogin(id, pw)) {
			System.out.println(">> 로그인에 성공하였습니다.");
			if (id.equals(MemberMain.ADMIN_ID))
				adminMenu(); // 관리자 아이디로 로그인
			else
				memberMenu(); // 일반 사용자 로그인
		} else {
			System.out.println(">> 아이디 또는 비밀번호가 일치하지 않습니다.");
		}
		System.out.println("-----------------------------------------------\n");
	}
	
	public void logout() {
		id = pw = null;
		System.out.println(">> 로그아웃합니다.");
		menu();
	}

	public void adminMenu() {
		while (true) {
			System.out.println("----------- Member only SYSTEM 관리자 모드 -----------");
			System.out.println("    1. 회원 목록    2. 회원 정보 수정    3. 회원 삭제");
			System.out.println("    4. 설문 관리    5. 로그아웃");
			System.out.println("---------------------------------------------------\n");
			System.out.print(">> 선택 : ");
			int select = sc.nextInt();
			sc.nextLine();
			switch (select) {
				case 1: printMemberList();
						break;
				case 2: 
						break;
				case 3: 
						break;
				case 4: new ServeyMain(sc, id).adminMenu();;
						return;
				case 5: logout();
						return;
				default:System.out.println(">> 1, 4 중에 하나만 입력해 주세요.");
						break;
			}
		}
	}

	public void printMemberList() {
		List<MemberVO> mems = dao.selectAllMember();
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy년 MM월 dd일");
		if (mems == null || mems.size() < 1) {
			System.out.println(">> 가입된 목록이 없습니다.");
		} else {
			System.out.println("------------------------ 회원 목록 ------------------------");
			System.out.printf("|%-10s| %-6s| %-20s| %-15s\n", "아이디", "이름", "이메일", "가입날짜");
			System.out.println("=========================================================");
			mems.forEach(o -> System.out.printf("%-10s %-6s %-20s %-15s\n"
												,o.getId()
												,o.getName()
												,o.getEmail()
												,sdf.format(o.getJoinDate())));
			System.out.println("---------------------------------------------");
		}
		System.out.println();
	}
	
	public void MemberInfo() {
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy년 MM월 dd일 hh:mm:ss");
		System.out.println("------------------ 회원 정보 ------------------");
		MemberVO mvo = dao.select(id);
		if (mvo != null) {
			System.out.println("   아이디 : " + mvo.getId());
			System.out.println("   비밀번호 : " + mvo.getPw());
			System.out.println("   이름 : " + mvo.getName());
			System.out.println("   이메일 : " + mvo.getEmail());
			System.out.println("   사진 : " + mvo.getPhoto());
			System.out.println("   성별 : " + mvo.getGender());
			System.out.println("   가입날짜 : "
					+ sdf.format(mvo.getJoinDate()));
		}
		System.out.println("---------------------------------------------");
		System.out.println();
	}

	public void memberMenu() {
		while (true) {
			System.out.println("---------- Member only SYSTEM 회원 모드 ----------");
			System.out.println("    1. 내 정보    2. 정보 수정     3. 회원 탈퇴");
			System.out.println("    4. 설문      5. 로그아웃");
			System.out.println("------------------------------------------------");
			System.out.print(">> 선택 : ");
			int select = sc.nextInt();
			sc.nextLine();
			switch (select) {
				case 1:	MemberInfo();
						break;
				case 2:	changeInfo();
						break;
				case 3: memberRemove();
						return;
				case 4: new ServeyMain(sc, id).memberMenu();
						return;
				case 5: logout();
						return;
				default:System.out.println(">> 1 중에 하나만 입력해 주세요.");
						break;
			}
		}
	}
	
	public void memberRemove() {
		System.out.print(">> 정말 탈퇴를 원하시면 y를 입력해주세요 : ");
		String select = sc.nextLine();
		if (select.equalsIgnoreCase("y")) {
			if(dao.delete(id)) {
				System.out.println(">> 회원 탈퇴되었습니다.");
				menu();
			}
		} else {
			System.out.println(">> 회원 탈퇴가 취소되었습니다.");
			memberMenu();
		}
	}

	public void changeInfo() {
		MemberVO mvo = dao.select(id);
		while(true) {
			System.out.println("------------------ 정보 수정 ------------------");
			System.out.println("  1. 비밀번호 변경  2. 이메일 변경  3. 저장  4. 취소");
			System.out.println("---------------------------------------------");
			System.out.print(">> 선택 : ");
			int select = sc.nextInt();
			sc.nextLine();
			switch (select) {
				case 1:	System.out.println(">> 비밀번호를 변경합니다.");
						System.out.print(">> 기존 비밀번호 : ");
						String oldPw = sc.nextLine();
						System.out.print(">> 신규 비밀번호 : ");
						String newPw = sc.nextLine();
						if (!mvo.getPw().equals(oldPw)) {
							System.out.println("비밀번호를 확인해 주세요.");
						} else if (mvo.getPw().equals(newPw)) {
							System.out.println("기존 비밀번호와 같은 번호입니다.");
						} else {
							mvo.setPw(newPw);
							System.out.println("비밀번호가 변경되었습니다.");
						}
						break;
				case 2:	System.out.println(">> 이메일을 변경합니다.");
						System.out.print(">> 신규 이메일 : ");
						String newEmail = sc.nextLine();
						if (newEmail.equals(mvo.getEmail())) {
							System.out.println("기존 이메일과 동일한 이메일입니다.");
						} else {
							mvo.setEmail(newEmail);
							System.out.println("이메일이 변경되었습니다.");
						}
						break;
				case 3:	dao.update(mvo);
						System.out.println("회원 정보가 변경되었습니다.");
						return;
				case 4:	return;
				default:System.out.println(">> 1 ~ 4 중에 하나만 입력해 주세요.");
						break;
			}
		}
	}
}
